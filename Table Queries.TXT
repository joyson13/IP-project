create table plan(plan_id INT(200) NOT NULL AUTO_INCREMENT, plan_name VARCHAR(200),plan_fee VARCHAR(200),plan_duration VARCHAR(200), PRIMARY KEY(plan_id));
create table timeslot(timeslot_id INT(200) NOT NULL AUTO_INCREMENT, time_slot VARCHAR(200),PRIMARY KEY(plan_id));
create table branch(branch_id INT(200) NOT NULL AUTO_INCREMENT, branch_city VARCHAR(200), branch_address VARCHAR(200), PRIMARY KEY(branch_id));
create table trainer(trainer_id INT(200) NOT NULL AUTO_INCREMENT, trianer_name VARCHAR(200), trainer_salary VARCHAR(200), phone_no VARCHAR(200),FOREIGN KEY(branch_id) REFERENCES branch(branch_id));


create table timeslot(timeslot_id INT(200) NOT NULL AUTO_INCREMENT, time_slot VARCHAR(200),PRIMARY KEY(timeslot_id));
create table branch(branch_id INT(200) NOT NULL AUTO_INCREMENT, branch_city VARCHAR(200), branch_address VARCHAR(200), PRIMARY KEY(branch_id));
create table trainer(trainer_id INT(200) NOT NULL AUTO_INCREMENT, trianer_name VARCHAR(200), trainer_salary VARCHAR(200), phone_no VARCHAR(200),PRIMARY KEY(trainer_id),branch_id int(200) not null,timesot_id int(200) not null, CONSTRAINT fk_branch FOREIGN KEY (branch_id) references branch(branch_id),CONSTRAINT fk_timeslot FOREIGN KEY (timesot_id) references timesot(timeslot_id));

create table customer(customer_id INT(200) NOT NULL AUTO_INCREMENT,name VARCHAR(200), email VARCHAR(200), username VARCHAR(200), password VARCHAR(200), phone_no VARCHAR(200),FOREIGN KEY(branch_id) REFERENCES branch(branch_id),FOREIGN KEY(trainer_id) REFERENCES trainer(trainer_id), FOREIGN KEY(plan_id) REFERENCES plan(plan_id),FOREIGN KEY(timeslot_id) REFERENCES timeslot(timeslot_id),joining_date DATE NOT NULL ); 